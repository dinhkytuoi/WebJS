{
  "openapi": "3.1.1",
  "info": {
    "title": "Contactbook API",
    "version": "1.0.0",
    "description": "A simple contact app API",
    "contact": {
      "name": "Tuoi Dinh",
      "email": "tuoib2206020@student.ctu.edu.vn"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/login": {
  "post": {
    "summary": "User login",
    "description": "Authenticate user and return session info",
    "tags": ["auth"],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "example": "test"
              },
              "password": {
                "type": "string",
                "example": "123"
              }
            },
            "required": ["username", "password"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Login success",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "uid": {
                  "type": "integer"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Invalid credentials",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Incorrect username or password"
                }
              }
            }
          }
        }
      }
    }
  }
}
    "/api/v1/contacts": {
      "get": {
        "summary": "Get contacts by filter",
        "description": "Get contacts by filter",
        "operationId": "getContactsByFilter",
        "parameters": [
          {
            "in": "query",
            "name": "favorite",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by favorite status"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by contact name"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/pageParam"
          }
        ],
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "A list of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The response status",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contacts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Contact"
                          }
                        },
                        "metadata": {
                          "$ref": "#/components/schemas/PaginationMetadata"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new contact",
        "description": "Create a new contact",
        "operationId": "createContact",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "tags": [
          "contacts"
        ],
        "responses": {
          "201": {
            "description": "A new contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The response status",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "$ref": "#/components/schemas/Contact"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all contacts",
        "description": "Delete all contacts",
        "operationId": "deleteContacts",
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "All contacts deleted",
            "$ref": "#/components/responses/200NoData"
          }
        }
      }
    },
    "/api/v1/contacts/{id}": {
      "get": {
        "summary": "Get contact by ID",
        "description": "Get contact by ID",
        "operationId": "getContactById",
        "parameters": [
          {
            "$ref": "#/components/parameters/contactIdParam"
          }
        ],
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "A contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The response status",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "$ref": "#/components/schemas/Contact"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update contact by ID",
        "description": "Update contact by ID",
        "operationId": "updateContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/contactIdParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "An updated contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The response status",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contact": {
                          "$ref": "#/components/schemas/Contact"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete contact by ID",
        "description": "Delete contact by ID",
        "operationId": "deleteContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/contactIdParam"
          }
        ],
        "tags": [
          "contacts"
        ],
        "responses": {
          "200": {
            "description": "Contact deleted",
            "$ref": "#/components/responses/200NoData"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "contact name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "contact email"
          },
          "address": {
            "type": "string",
            "description": "contact address"
          },
          "phone": {
            "type": "string",
            "description": "contact phone number"
          },
          "favorite": {
            "type": "boolean",
            "default": false,
            "description": "favorite contact"
          },
          "avatar": {
            "type": "string",
            "readOnly": true,
            "description": "contact avatar file path"
          },
          "avatarFile": {
            "type": "string",
            "format": "binary",
            "writeOnly": true,
            "description": "contact avatar file"
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "totalRecords": {
            "type": "integer",
            "default": 0,
            "description": "The total number of records"
          },
          "firstPage": {
            "type": "integer",
            "default": 1,
            "description": "The first page"
          },
          "lastPage": {
            "type": "integer",
            "default": 1,
            "description": "The last page"
          },
          "page": {
            "type": "integer",
            "default": 1,
            "description": "The current page"
          },
          "limit": {
            "type": "integer",
            "default": 5,
            "description": "The number of records per page"
          }
        }
      }
    },
    "responses": {
      "200NoData": {
        "description": "No content",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The response status",
                  "enum": [
                    "success"
                  ]
                },
                "data": {
                  "type": ["object", "null"],
                  "default": null,
                  "description": "The response data"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "contactIdParam": {
        "name": "id",
        "description": "Contact ID",
        "required": true,
        "in": "path",
        "schema": {
          "type": "integer"
        }
      },
      "limitParam": {
        "name": "limit",
        "description": "Number of records per page",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 5,
          "minimum": 1,
          "maximum": 100
        },
        "required": false
      },
      "pageParam": {
        "name": "page",
        "description": "Page number of records",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "required": false
      }
    }
  },
  "tags": [
    {
      "name": "contacts",
      "description": "Contacts operations"
    }
  ]
}